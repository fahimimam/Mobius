{{template "base" .}}

{{define "header"}}
    <title>Register Page</title>
    <link rel="stylesheet" type="text/css" href="../assets/css/styles.css">
    <style>
        body, h1, h2, h3, p, ul, ol, li, form, fieldset, input, button {
            margin: 5px;
            padding: 5px;
            border: 5px;
            font-family: Arial, sans-serif;
        }

        /* Apply a background color to the entire page */
        body {
            background-color: #1d403f;
        }

        /* Center the container */
        .container {
            width: 100%;
            max-width: 400px; /* Adjust the maximum width as needed */
            margin: 2px auto;
            border: 5px;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            align-content: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        /* Style form inputs */
        input[type="email"],
        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            align-content: center;
        }

        /* Style the submit button */
        button[type="submit"] {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }

        /* Style form labels */
        label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        /* Add spacing between form elements */
        .form-group {
            margin-bottom: 20px;
        }

    </style>
{{end}}

{{define "content"}}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Register</h1>
                <hr>
                <form id="registerForm" method="POST">
                    <div class="mb-3">
                        <label for="email" class="form-label">Email address</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="firstName" name="firstName" required>
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="lastName" name="lastName" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Register</button>
                </form>
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        // Get the form element
        let registerForm = document.getElementById("registerForm");

        // Add submit event listener to the form
        registerForm.addEventListener("submit", function(event) {
            // Prevent the default form submission behavior
            event.preventDefault();

            // Get form data
            const formData = new FormData(registerForm);
            const email = formData.get("email");
            const firstName = formData.get("firstName");
            const lastName = formData.get("lastName");
            const password = formData.get("password");
            const confirmPassword = formData.get("confirmPassword");

            // Your form validation logic goes here
            if (password !== confirmPassword) {
                output.innerHTML = "<br><strong>Error:</strong> Passwords do not match.";
                return;
            }
            // Construct the payload
            const payload = {
                action: "registration",
                email: email,
                first_name: firstName,
                last_name: lastName,
                password: password
            };

            // Construct the fetch options
            const options = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: {
                    "Content-Type": "application/json"
                }
            };

            // Send the form data to the broker microservice
            fetch("http://localhost:8080/handle", options)
                .then(response => response.json())
                .then(data => {
                    // Handle the response
                    // For example, update the UI based on the response data
                    console.log(data);
                })
                .catch(error => {
                    // Handle errors
                    console.error(error);
                });
        });

    </script>
{{end}}
